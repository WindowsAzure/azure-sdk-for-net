// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.Containers.ContainerRegistry.Specialized
{
    internal static partial class ManifestMediaTypeExtensions
    {
        public static string ToSerialString(this ManifestMediaType value) => value switch
        {
            ManifestMediaType.DockerManifestV2 => "application/vnd.docker.distribution.manifest.v2+json",
            ManifestMediaType.OciManifestV1 => "application/vnd.oci.image.manifest.v1+json",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown ManifestMediaType value.")
        };

        public static ManifestMediaType ToManifestMediaType(this string value)
        {
            if (string.Equals(value, "application/vnd.docker.distribution.manifest.v2+json", StringComparison.InvariantCultureIgnoreCase)) return ManifestMediaType.DockerManifestV2;
            if (string.Equals(value, "application/vnd.oci.image.manifest.v1+json", StringComparison.InvariantCultureIgnoreCase)) return ManifestMediaType.OciManifestV1;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown ManifestMediaType value.");
        }
    }
}
